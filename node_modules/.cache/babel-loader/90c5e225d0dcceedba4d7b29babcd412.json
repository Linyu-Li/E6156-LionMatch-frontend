{"ast":null,"code":"import _classCallCheck from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/src/containers/Home/Home.js\";\nimport React, { Component } from 'react'; // import Button from 'react-bootstrap/lib/Button';\n\nimport Button from '../../components/Button';\nimport { connect } from 'react-redux';\nimport UserRegister from '../User/UserRegister/UserRegister'; // import GoogleLogin from 'react-google-login';\n\nimport './Home.css'; // import {\n//     GoogleButton,\n//     GoogleAuthConsumer,\n//     IAuthorizationOptions,\n//     isLoggedIn,\n//     IOAuthState,\n//     createOAuthHeaders,\n//     logOutOAuthUser,\n//     GoogleAuth,\n// } from \"react-google-oauth2\";\n// const responseGoogle = (response) => {\n//     console.log(\"response: \"+response);\n// };\n// const options = {\n//     clientId: \"1093327178993-kbj68ghvsopafunmdk8rt1r6upt0oqdo.apps.googleusercontent.com\",\n//     redirectUri: \"http://localhost:3000\",\n//     scopes: [\"openid\", \"profile\", \"email\"],\n//     includeGrantedScopes: true,\n//     accessType: \"offline\"\n// };\n\nvar Home = /*#__PURE__*/function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      registerMode: false\n    };\n\n    _this.cancelRegisterMode = function () {\n      _this.setState({\n        registerMode: false\n      });\n    };\n\n    _this.registerToggle = function () {\n      _this.setState({\n        registerMode: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var registerMessage = null;\n\n      if (!this.props.isAuthenticated && !this.state.registerMode) {\n        registerMessage = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"register_text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }\n        }, \"Find your match\"), /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }\n        }, \"All you need to do is sign up!\"), /*#__PURE__*/React.createElement(Button, {\n          primary: true,\n          bsStyle: \"danger\",\n          bsSize: \"large\",\n          onClick: this.registerToggle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }\n        }, \"Register\")));\n      }\n\n      var register = null;\n\n      if (this.state.registerMode) {\n        register = /*#__PURE__*/React.createElement(UserRegister, {\n          canceled: this.cancelRegisterMode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 24\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, registerMessage, register);\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/src/containers/Home/Home.js"],"names":["React","Component","Button","connect","UserRegister","Home","state","registerMode","cancelRegisterMode","setState","registerToggle","registerMessage","props","isAuthenticated","register","mapStateToProps","auth","token"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,mCAAzB,C,CACA;;AACA,OAAO,YAAP,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,I;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,YAAY,EAAE;AADV,K;;UAIRC,kB,GAAqB,YAAM;AACvB,YAAKC,QAAL,CAAc;AAACF,QAAAA,YAAY,EAAE;AAAf,OAAd;AACH,K;;UAEDG,c,GAAiB,YAAM;AACnB,YAAKD,QAAL,CAAc;AAACF,QAAAA,YAAY,EAAE;AAAf,OAAd;AACH,K;;;;;;;WAID,kBAAS;AAEL,UAAII,eAAe,GAAG,IAAtB;;AACA,UAAG,CAAC,KAAKC,KAAL,CAAWC,eAAZ,IAA+B,CAAC,KAAKP,KAAL,CAAWC,YAA9C,EAA4D;AACxDI,QAAAA,eAAe,gBACX;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEI;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,eAGI,oBAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAgB,UAAA,OAAO,EAAC,QAAxB;AAAiC,UAAA,MAAM,EAAC,OAAxC;AAAgD,UAAA,OAAO,EAAE,KAAKD,cAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,CADJ,CADJ;AAwCH;;AAED,UAAII,QAAQ,GAAG,IAAf;;AACA,UAAG,KAAKR,KAAL,CAAWC,YAAd,EAA4B;AACxBO,QAAAA,QAAQ,gBAAG,oBAAC,YAAD;AAAc,UAAA,QAAQ,EAAE,KAAKN,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACH;;AAED,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKG,eADL,EAEKG,QAFL,CADJ;AAMH;;;;EAzEcb,S;;AA4EnB,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAAAT,KAAK,EAAI;AAC7B,SAAO;AACHO,IAAAA,eAAe,EAAEP,KAAK,CAACU,IAAN,CAAWC,KAAX,KAAqB;AADnC,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAACY,eAAD,CAAP,CAAyBV,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\n// import Button from 'react-bootstrap/lib/Button';\nimport Button from '../../components/Button'\nimport { connect } from 'react-redux';\nimport UserRegister from '../User/UserRegister/UserRegister';\n// import GoogleLogin from 'react-google-login';\nimport './Home.css';\n// import {\n//     GoogleButton,\n//     GoogleAuthConsumer,\n//     IAuthorizationOptions,\n//     isLoggedIn,\n//     IOAuthState,\n//     createOAuthHeaders,\n//     logOutOAuthUser,\n//     GoogleAuth,\n// } from \"react-google-oauth2\";\n\n// const responseGoogle = (response) => {\n//     console.log(\"response: \"+response);\n// };\n\n// const options = {\n//     clientId: \"1093327178993-kbj68ghvsopafunmdk8rt1r6upt0oqdo.apps.googleusercontent.com\",\n//     redirectUri: \"http://localhost:3000\",\n//     scopes: [\"openid\", \"profile\", \"email\"],\n//     includeGrantedScopes: true,\n//     accessType: \"offline\"\n// };\n\nclass Home extends Component {\n\n    state = {\n        registerMode: false\n    };\n    \n    cancelRegisterMode = () => {\n        this.setState({registerMode: false});\n    }\n\n    registerToggle = () => {\n        this.setState({registerMode: true});\n    }\n\n\n    \n    render() {\n\n        let registerMessage = null;\n        if(!this.props.isAuthenticated && !this.state.registerMode) {        \n            registerMessage = (\n                <div className=\"register_text\">\n                    <div className=\"text-center\">\n                        <h1 className=\"text\">Find your match</h1>\n                        <h4 className=\"text\">All you need to do is sign up!</h4>\n                        <Button primary bsStyle=\"danger\" bsSize=\"large\" onClick={this.registerToggle}>Register</Button>\n                        {/*<Button primary>Hello world!</Button>*/}\n                        {/*<GoogleButton*/}\n                        {/*    options={options}*/}\n                        {/*    apiUrl=\"http://localhost:3000/\"*/}\n                        {/*    defaultStyle={true} // Optional*/}\n                        {/*/>*/}\n\n                        {/*<GoogleAuth>*/}\n                        {/*    <GoogleAuthConsumer>*/}\n                        {/*        {({responseState, isAuthenticated}) => {*/}\n                        {/*            if (!isAuthenticated) {*/}\n                        {/*            return <GoogleButton*/}\n                        {/*                // placeholder=\"demo/search.png\" // Optional*/}\n                        {/*                options={options}*/}\n                        {/*                apiUrl=\"http://localhost:3000\"*/}\n                        {/*                defaultStyle={true} // Optional*/}\n                        {/*                displayErrors={true}>Sign in with google</GoogleButton>;*/}\n                        {/*            } else {*/}\n                        {/*                if (responseState.accessToken) { // You can also use isLoggedIn()*/}\n                        {/*                    // Now send a request to your server using  createOAuthHeaders() function*/}\n                        {/*                    let url = 'http://localhost:5000';*/}\n                        {/*                    fetch(url, {*/}\n                        {/*                        headers: createOAuthHeaders(),*/}\n                        {/*                    })*/}\n                        {/*                    .then(data => console.log(\"Horay We're logged in!\"))*/}\n                        {/*                    .catch(err => console.error(\"Just because you have a gmail account doesn't mean you have access!\"))*/}\n                        {/*                }*/}\n                        {/*            }*/}\n                        {/*        }}*/}\n                        {/*    </GoogleAuthConsumer>*/}\n                        {/*</GoogleAuth>*/}\n                    </div>\n                </div>\n            );\n        }\n\n        let register = null;\n        if(this.state.registerMode) {\n            register = <UserRegister canceled={this.cancelRegisterMode}/>\n        }\n\n        return(\n            <div className=\"background\">\n                {registerMessage}\n                {register}\n            </div>\n        );\n    }    \n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n}\n\nexport default connect(mapStateToProps)(Home);"]},"metadata":{},"sourceType":"module"}