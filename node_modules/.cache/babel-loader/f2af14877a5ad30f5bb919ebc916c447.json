{"ast":null,"code":"var _jsxFileName = \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from './store/reducers/auth';\nimport userReducer from './store/reducers/user';\nimport prefReducer from \"./store/reducers/pref\"; // import * as root from \"react-dom\";\n// const composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nvar composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\nvar rootReducer = combineReducers({\n  auth: authReducer,\n  user: userReducer,\n  pref: prefReducer\n});\nvar store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\nvar app = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }\n})));\nReactDOM.render(app, document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/src/index.js"],"names":["React","ReactDOM","BrowserRouter","App","serviceWorker","Provider","createStore","applyMiddleware","compose","combineReducers","thunk","authReducer","userReducer","prefReducer","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","auth","user","pref","store","app","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB,C,CACA;AAEA;;AACA,IAAMC,gBAAgB,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,MAAM,CAACC,oCAAhD,GAAuF,IAAxF,KAAiGX,OAA1H;AAEA,IAAMY,WAAW,GAAGX,eAAe,CAAC;AAChCY,EAAAA,IAAI,EAAEV,WAD0B;AAEhCW,EAAAA,IAAI,EAAEV,WAF0B;AAGhCW,EAAAA,IAAI,EAAEV;AAH0B,CAAD,CAAnC;AAMA,IAAMW,KAAK,GAAGlB,WAAW,CAACc,WAAD,EAAcN,gBAAgB,CACnDP,eAAe,CAACG,KAAD,CADoC,CAA9B,CAAzB;AAIA,IAAMe,GAAG,gBACL,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ;AAQAvB,QAAQ,CAACyB,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB,E,CAGA;AACA;AACA;;AACAxB,aAAa,CAACyB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from './store/reducers/auth';\nimport userReducer from './store/reducers/user';\nimport prefReducer from \"./store/reducers/pref\";\n// import * as root from \"react-dom\";\n\n// const composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    user: userReducer,\n    pref: prefReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>    \n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}