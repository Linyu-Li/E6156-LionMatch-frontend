{"ast":null,"code":"import _defineProperty from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/src/containers/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/lib/Button';\nimport Navbar from 'react-bootstrap/lib/Navbar';\nimport { connect } from 'react-redux';\nimport Input from '../../components/UI/Input/Input';\nimport { checkValidity, updateObject } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\nimport './Auth.css';\n\nvar Auth = /*#__PURE__*/function (_Component) {\n  _inherits(Auth, _Component);\n\n  var _super = _createSuper(Auth);\n\n  function Auth() {\n    var _this;\n\n    _classCallCheck(this, Auth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      controls: {\n        email: {\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Email'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false\n        },\n        password: {\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false\n        }\n      }\n    };\n\n    _this.inputChangedHandler = function (event, controlName) {\n      var updatedControls = updateObject(_this.state.controls, _defineProperty({}, controlName, updateObject(_this.state.controls[controlName], {\n        value: event.target.value,\n        valid: checkValidity(event.target.value, _this.state.controls[controlName].validation)\n      })));\n\n      _this.setState({\n        controls: updatedControls\n      });\n    };\n\n    _this.submitHandler = function (event) {\n      event.preventDefault();\n\n      _this.props.onAuth(_this.state.controls.email.value, _this.state.controls.password.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(Auth, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.controls) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.controls[key]\n        });\n      }\n\n      var form = formElementsArray.map(function (formElement) {\n        return /*#__PURE__*/React.createElement(Input, {\n          key: formElement.id,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }\n        });\n      });\n      return /*#__PURE__*/React.createElement(Navbar.Form, {\n        pullRight: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, form, /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        bsStyle: \"success\",\n        onClick: this.submitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"Log in\"));\n    }\n  }]);\n\n  return Auth;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth(email, password) {\n      return dispatch(actions.auth(email, password));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/src/containers/Auth/Auth.js"],"names":["React","Component","Button","Navbar","connect","Input","checkValidity","updateObject","actions","Auth","state","controls","email","elementConfig","type","placeholder","value","validation","required","valid","password","inputChangedHandler","event","controlName","updatedControls","target","setState","submitHandler","preventDefault","props","onAuth","formElementsArray","key","push","id","config","form","map","formElement","mapDispatchToProps","dispatch","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'react-bootstrap/lib/Button';\nimport Navbar from 'react-bootstrap/lib/Navbar';\nimport { connect } from 'react-redux';\nimport Input from '../../components/UI/Input/Input';\nimport { checkValidity, updateObject } from '../../shared/utility';\nimport * as actions from '../../store/actions/index';\nimport './Auth.css';\n\nclass Auth extends Component {\n\n    state = {\n        controls: {\n            email: {\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Email'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false\n            },\n            password: {\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false\n            }\n        }\n    }\n\n    inputChangedHandler = ( event, controlName ) => {\n        const updatedControls = updateObject(this.state.controls, {\n            [controlName]: updateObject(this.state.controls[controlName], {\n                value: event.target.value,\n                valid: checkValidity(event.target.value, this.state.controls[controlName].validation )\n            })\n        });\n        this.setState( { controls: updatedControls } );\n    }\n\n    submitHandler = ( event ) => {\n        event.preventDefault();\n        this.props.onAuth( this.state.controls.email.value, this.state.controls.password.value );\n    }\n\n    render() {\n\n        const formElementsArray = [];\n        for ( let key in this.state.controls ) {\n            formElementsArray.push( {\n                id: key,\n                config: this.state.controls[key]\n            } );\n        }\n\n        let form = formElementsArray.map( formElement => (\n            <Input\n                key={formElement.id}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                changed={( event ) => this.inputChangedHandler( event, formElement.id )} />\n        ) );\n\n        return (\n            <Navbar.Form pullRight>\n                {form}\n                <Button type=\"submit\" bsStyle=\"success\" onClick={this.submitHandler}>Log in</Button>\n            </Navbar.Form>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: ( email, password ) => dispatch( actions.auth( email, password ) ),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);"]},"metadata":{},"sourceType":"module"}