{"ast":null,"code":"import _defineProperty from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/src/containers/UserPref/UserPref.js\";\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { checkValidity, updateObject } from \"../../shared/utility\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Grid from \"react-bootstrap/lib/Grid\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport Form from \"react-bootstrap/lib/Form\";\nimport FormGroup from \"react-bootstrap/lib/FormGroup\";\nimport ControlLabel from \"react-bootstrap/lib/ControlLabel\";\nimport Radio from \"react-bootstrap/lib/Radio\";\nimport ButtonToolbar from \"react-bootstrap/lib/ButtonToolbar\";\nimport Button from \"react-bootstrap/lib/Button\";\nimport * as actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\nimport \"./UserPref.css\";\n\nvar capitalize = function capitalize(s) {\n  return s && s[0].toUpperCase() + s.slice(1);\n};\n\nvar UserPref = function UserPref(_ref) {\n  var prefId = _ref.prefId,\n      onGetPref = _ref.onGetPref,\n      onUpdatePref = _ref.onUpdatePref,\n      curPref = _ref.curPref,\n      canceled = _ref.canceled;\n\n  var _useParams = useParams(),\n      urlPrefId = _useParams.urlPrefId;\n\n  prefId = urlPrefId || prefId;\n  React.useEffect(function () {\n    if (prefId !== undefined && prefId !== null) {\n      onGetPref(prefId);\n    }\n  }, [prefId]);\n\n  var _React$useState = React.useState({\n    major: {\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Your academic major'\n      },\n      value: null,\n      validation: {\n        required: false\n      },\n      valid: false\n    },\n    hobby: {\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Your hobbies in general (e.g. video games)'\n      },\n      value: null,\n      validation: {\n        required: false\n      },\n      valid: false\n    },\n    movie: {\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Your favorite movies'\n      },\n      value: null,\n      validation: {\n        required: false\n      },\n      valid: false\n    },\n    book: {\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Your favorite books'\n      },\n      value: null,\n      validation: {\n        required: false\n      },\n      valid: false\n    },\n    music: {\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Your favorite music genres'\n      },\n      value: null,\n      validation: {\n        required: false\n      },\n      valid: false\n    },\n    sport: {\n      elementConfig: {\n        type: 'text',\n        placeholder: 'Your favorite sports'\n      },\n      value: null,\n      validation: {\n        required: false\n      },\n      valid: false\n    },\n    orientation: {\n      value: 'Heterosexual'\n    }\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (curPref !== undefined && curPref !== null) {\n      var update = {};\n\n      for (var formElementIdentifier in state) {\n        update[formElementIdentifier] = _objectSpread(_objectSpread({}, state[formElementIdentifier]), {}, {\n          value: curPref[formElementIdentifier]\n        });\n      }\n\n      setState(updateObject(state, update));\n    }\n  }, [curPref]);\n  var orientOptions = ['Heterosexual', 'Bisexual', 'Homosexual', 'Asexual', 'Secret'];\n\n  var inputChangedHandler = function inputChangedHandler(event, controlName) {\n    var updatedControls = updateObject(state, _defineProperty({}, controlName, updateObject(state[controlName], {\n      value: event.target.value,\n      valid: checkValidity(event.target.value, state[controlName].validation)\n    })));\n    setState(updatedControls);\n  };\n\n  var handleOrientChange = function handleOrientChange(orient) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      orientation: {\n        value: orient.target.value\n      }\n    }));\n  };\n\n  var submitHandler = function submitHandler(event) {\n    event.preventDefault();\n    var formData = {};\n\n    for (var formElementIdentifier in state) {\n      formData[formElementIdentifier] = state[formElementIdentifier].value;\n    }\n\n    formData.prefId = prefId;\n    onUpdatePref(formData);\n  };\n\n  var formElementsArray = [];\n\n  for (var key in state) {\n    if (state[key].elementConfig !== undefined) {\n      formElementsArray.push({\n        id: key,\n        config: state[key]\n      });\n    }\n  }\n\n  var formFields = formElementsArray.map(function (formElement) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, capitalize(formElement.id)), /*#__PURE__*/React.createElement(Input, {\n      key: formElement.id,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      changed: function changed(event) {\n        return inputChangedHandler(event, formElement.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }));\n  });\n  var orientRadio = orientOptions.map(function (o) {\n    return /*#__PURE__*/React.createElement(Radio, {\n      name: \"radioGroup\",\n      inline: true,\n      value: o,\n      checked: state.orientation.value === o,\n      onChange: handleOrientChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, o);\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 10,\n    lg: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, \"Edit Profile\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ControlLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }, \"Sexual Orientation\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }), orientRadio), formFields, /*#__PURE__*/React.createElement(ButtonToolbar, {\n    className: \"float-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    bsStyle: \"success\",\n    onClick: submitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }, \"Update\"))))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    curPref: state.pref.curPref\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onGetPref: function onGetPref(pref_id) {\n      return dispatch(actions.getPref(pref_id));\n    },\n    onUpdatePref: function onUpdatePref(pref) {\n      return dispatch(actions.updatePref(pref));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPref);","map":{"version":3,"sources":["/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/src/containers/UserPref/UserPref.js"],"names":["React","useParams","checkValidity","updateObject","Input","Grid","Row","Col","Form","FormGroup","ControlLabel","Radio","ButtonToolbar","Button","actions","connect","capitalize","s","toUpperCase","slice","UserPref","prefId","onGetPref","onUpdatePref","curPref","canceled","urlPrefId","useEffect","undefined","useState","major","elementConfig","type","placeholder","value","validation","required","valid","hobby","movie","book","music","sport","orientation","state","setState","update","formElementIdentifier","orientOptions","inputChangedHandler","event","controlName","updatedControls","target","handleOrientChange","orient","submitHandler","preventDefault","formData","formElementsArray","key","push","id","config","formFields","map","formElement","orientRadio","o","mapStateToProps","pref","mapDispatchToProps","dispatch","pref_id","getPref","updatePref"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {checkValidity, updateObject} from \"../../shared/utility\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Grid from \"react-bootstrap/lib/Grid\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport Form from \"react-bootstrap/lib/Form\";\nimport FormGroup from \"react-bootstrap/lib/FormGroup\";\nimport ControlLabel from \"react-bootstrap/lib/ControlLabel\";\nimport Radio from \"react-bootstrap/lib/Radio\";\nimport ButtonToolbar from \"react-bootstrap/lib/ButtonToolbar\";\nimport Button from \"react-bootstrap/lib/Button\";\nimport * as actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\nimport \"./UserPref.css\";\n\n\nconst capitalize = (s) => {\n    return s && s[0].toUpperCase() + s.slice(1);\n}\n\nconst UserPref = ({ prefId, onGetPref, onUpdatePref, curPref, canceled }) => {\n    let { urlPrefId } = useParams();\n    prefId = urlPrefId || prefId;\n\n    React.useEffect(() => {\n        if (prefId !== undefined && prefId !== null) {\n            onGetPref(prefId);\n        }\n    }, [prefId])\n\n    const [state, setState] = React.useState({\n        major: {\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Your academic major'\n            },\n            value: null,\n            validation: {\n                required: false\n            },\n            valid: false\n        },\n        hobby: {\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Your hobbies in general (e.g. video games)'\n            },\n            value: null,\n            validation: {\n                required: false\n            },\n            valid: false\n        },\n        movie: {\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Your favorite movies'\n            },\n            value: null,\n            validation: {\n                required: false\n            },\n            valid: false\n        },\n        book: {\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Your favorite books'\n            },\n            value: null,\n            validation: {\n                required: false\n            },\n            valid: false\n        },\n        music: {\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Your favorite music genres'\n            },\n            value: null,\n            validation: {\n                required: false\n            },\n            valid: false\n        },\n        sport: {\n            elementConfig: {\n                type: 'text',\n                placeholder: 'Your favorite sports'\n            },\n            value: null,\n            validation: {\n                required: false\n            },\n            valid: false\n        },\n        orientation: {\n            value: 'Heterosexual'\n        },\n    });\n\n    React.useEffect(() => {\n        if (curPref !== undefined && curPref !== null) {\n            let update = {};\n            for (let formElementIdentifier in state) {\n                update[formElementIdentifier] = {...state[formElementIdentifier], value: curPref[formElementIdentifier] };\n            }\n            setState(updateObject(state, update));\n        }\n    }, [curPref]);\n\n    const orientOptions = ['Heterosexual', 'Bisexual', 'Homosexual', 'Asexual', 'Secret'];\n\n    const inputChangedHandler = ( event, controlName ) => {\n        const updatedControls = updateObject(state, {\n            [controlName]: updateObject(state[controlName], {\n                value: event.target.value,\n                valid: checkValidity(event.target.value, state[controlName].validation)\n            })\n        });\n        setState(updatedControls);\n    }\n\n    const handleOrientChange = orient => {\n        setState({\n            ...state,\n            orientation: { value: orient.target.value }\n        });\n    };\n\n    const submitHandler = ( event ) => {\n        event.preventDefault();\n        const formData = {};\n        for (let formElementIdentifier in state) {\n            formData[formElementIdentifier] = state[formElementIdentifier].value;\n        }\n        formData.prefId = prefId;\n        onUpdatePref( formData );\n    }\n\n    let formElementsArray = [];\n    for (let key in state) {\n        if (state[key].elementConfig !== undefined) {\n            formElementsArray.push({\n                id: key,\n                config: state[key]\n            });\n        }\n    }\n\n    const formFields = formElementsArray.map(formElement => (\n        <>\n            <ControlLabel>{capitalize(formElement.id)}</ControlLabel>\n            <Input\n                key={formElement.id}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                changed={( event ) => inputChangedHandler( event, formElement.id )}\n            />\n        </>\n    ));\n\n    const orientRadio = orientOptions.map(o => (\n        <Radio\n            name=\"radioGroup\"\n            inline\n            value={o}\n            checked={state.orientation.value === o}\n            onChange={handleOrientChange}\n        >\n            {o}\n        </Radio>\n    ));\n\n    return (\n        <Grid>\n            <Row>\n                <Col xs={12} md={10} lg={6}>\n                    <h2>Edit Profile</h2>\n                    <hr />\n                    <Form>\n                        <FormGroup>\n                            <ControlLabel>Sexual Orientation</ControlLabel>\n                            <br/>\n                            {orientRadio}\n                        </FormGroup>\n                        {formFields}\n                        <ButtonToolbar className=\"float-right\">\n                            <Button bsStyle=\"success\" onClick={submitHandler}>Update</Button>\n                            {/*<Button onClick={canceled}>Cancel</Button>*/}\n                        </ButtonToolbar>\n                    </Form>\n                </Col>\n            </Row>\n        </Grid>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        curPref: state.pref.curPref,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onGetPref: ( pref_id ) => dispatch(actions.getPref(pref_id)),\n        onUpdatePref: ( pref ) => dispatch(actions.updatePref(pref))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPref);\n"]},"metadata":{},"sourceType":"module"}