{"ast":null,"code":"import axios from 'axios';\nimport { USR_ADDR_URL } from \"../../constants\";\nimport * as actionTypes from './actionTypes';\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(token, user) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    user: user\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var auth = function auth(email, password) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var authData = {\n      email: email,\n      password: password\n    };\n    var url = USR_ADDR_URL + '/auth';\n    axios.post(url, authData).then(function (response) {\n      window.alert(\"Got token: \".concat(response.data.token));\n      localStorage.setItem('token', response.data.token);\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      dispatch(authSuccess(response.data.token, response.data.user));\n    }).catch(function (err) {\n      console.log(err); // window.alert(err.response.data);    // should show message defined in auth() in app.py\n\n      dispatch(authFail(err));\n    });\n  };\n};\nexport var authCheckState = function authCheckState() {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      var user = JSON.parse(localStorage.getItem('user'));\n      dispatch(authSuccess(token, user));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/src/store/actions/auth.js"],"names":["axios","USR_ADDR_URL","actionTypes","authStart","type","AUTH_START","authSuccess","token","user","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","auth","email","password","dispatch","authData","url","post","then","response","window","alert","data","setItem","JSON","stringify","catch","err","console","log","authCheckState","getItem","parse"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACxC,SAAO;AACHJ,IAAAA,IAAI,EAAEF,WAAW,CAACO,YADf;AAEHF,IAAAA,KAAK,EAAEA,KAFJ;AAGHC,IAAAA,IAAI,EAAEA;AAHH,GAAP;AAKH,CANM;AAQP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHP,IAAAA,IAAI,EAAEF,WAAW,CAACU,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AACxBC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACA,SAAO;AACHX,IAAAA,IAAI,EAAEF,WAAW,CAACc;AADf,GAAP;AAGH,CANM;AAQP,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACrC,SAAO,UAAAC,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACjB,SAAS,EAAV,CAAR;AACA,QAAMkB,QAAQ,GAAG;AACbH,MAAAA,KAAK,EAAEA,KADM;AAEbC,MAAAA,QAAQ,EAAEA;AAFG,KAAjB;AAIA,QAAIG,GAAG,GAAGrB,YAAY,GAAG,OAAzB;AACAD,IAAAA,KAAK,CAACuB,IAAN,CAAWD,GAAX,EAAgBD,QAAhB,EACKG,IADL,CACU,UAAAC,QAAQ,EAAI;AACdC,MAAAA,MAAM,CAACC,KAAP,sBAA2BF,QAAQ,CAACG,IAAT,CAAcrB,KAAzC;AACAO,MAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BJ,QAAQ,CAACG,IAAT,CAAcrB,KAA5C;AACAO,MAAAA,YAAY,CAACe,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACG,IAAT,CAAcpB,IAA7B,CAA7B;AACAY,MAAAA,QAAQ,CAACd,WAAW,CAACmB,QAAQ,CAACG,IAAT,CAAcrB,KAAf,EAAsBkB,QAAQ,CAACG,IAAT,CAAcpB,IAApC,CAAZ,CAAR;AACH,KANL,EAMOwB,KANP,CAMa,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EADY,CAEZ;;AACAb,MAAAA,QAAQ,CAACV,QAAQ,CAACuB,GAAD,CAAT,CAAR;AACH,KAVL;AAWH,GAlBD;AAmBH,CApBM;AAsBP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAChC,SAAO,UAAAhB,QAAQ,EAAI;AACf,QAAMb,KAAK,GAAGO,YAAY,CAACuB,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAI,CAAC9B,KAAL,EAAY;AACRa,MAAAA,QAAQ,CAACP,MAAM,EAAP,CAAR;AACH,KAFD,MAEO;AACH,UAAML,IAAI,GAAGsB,IAAI,CAACQ,KAAL,CAAWxB,YAAY,CAACuB,OAAb,CAAqB,MAArB,CAAX,CAAb;AACAjB,MAAAA,QAAQ,CAACd,WAAW,CAACC,KAAD,EAAQC,IAAR,CAAZ,CAAR;AACH;AACJ,GARD;AASH,CAVM","sourcesContent":["import axios from 'axios';\nimport {USR_ADDR_URL} from \"../../constants\";\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, user) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        user: user\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const auth = (email, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password\n        };\n        let url = USR_ADDR_URL + '/auth';\n        axios.post(url, authData)\n            .then(response => {\n                window.alert(`Got token: ${response.data.token}`);\n                localStorage.setItem('token', response.data.token);\n                localStorage.setItem('user', JSON.stringify(response.data.user));\n                dispatch(authSuccess(response.data.token, response.data.user));\n            }).catch(err => {\n                console.log(err);\n                // window.alert(err.response.data);    // should show message defined in auth() in app.py\n                dispatch(authFail(err));\n            });\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {            \n            const user = JSON.parse(localStorage.getItem('user'));\n            dispatch(authSuccess(token, user));\n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}