{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nimport { USR_ADDR_URL, USR_REVIEW_URL, COMPOSITION_URL } from \"../../constants\";\nvar MAX_REVIEW_DISPLAY = 5;\nexport var userRegisterStart = function userRegisterStart() {\n  return {\n    type: actionTypes.USER_REGISTER_START\n  };\n};\nexport var userRegisterSuccess = function userRegisterSuccess(response) {\n  return {\n    type: actionTypes.USER_REGISTER_SUCCESS,\n    response: response\n  };\n};\nexport var userRegisterFail = function userRegisterFail(error) {\n  return {\n    type: actionTypes.USER_REGISTER_FAIL,\n    error: error\n  };\n};\nexport var register = function register(userData) {\n  return function (dispatch) {\n    dispatch(userRegisterStart()); // const url = `${USR_ADDR_URL}/users`;\n\n    var url = \"\".concat(COMPOSITION_URL, \"/create\");\n    axios.post(url, userData).then(function (response) {\n      dispatch(userRegisterSuccess());\n    }).catch(function (err) {\n      dispatch(userRegisterFail(err));\n    });\n  };\n};\nexport var getUserSuccess = function getUserSuccess(user) {\n  return {\n    type: actionTypes.GET_USER_SUCCESS,\n    user: user\n  };\n};\nexport var getUserFail = function getUserFail(error) {\n  return {\n    type: actionTypes.GET_USER_FAIL,\n    error: error\n  };\n};\nexport var getUser = function getUser(userId) {\n  return function (dispatch) {\n    var url = \"\".concat(USR_ADDR_URL, \"/users/\") + userId;\n    var token = localStorage.getItem('token');\n    axios.get(url, {\n      headers: {\n        \"Authorization\": \"Bearer \".concat(token)\n      }\n    }).then(function (response) {\n      axios.get(\"\".concat(USR_REVIEW_URL, \"/users/\").concat(userId, \"/reviews\")).then(function (res) {\n        res = res.data;\n        var reviews = [];\n        res.sort(function (a, b) {\n          return b.freq - a.freq;\n        });\n\n        for (var i = 0; i < Math.min(res.length, MAX_REVIEW_DISPLAY); i++) {\n          reviews.push(res[i].review);\n        }\n\n        response.data.reviews = reviews.join(\",\");\n        axios.get(\"\".concat(USR_ADDR_URL, \"/address/\").concat(response.data.addressID)).then(function (res) {\n          response.data.postalCode = res.data.postalCode;\n          axios.get(\"\".concat(USR_ADDR_URL, \"/users/\").concat(userId, \"/weather\")).then(function (res) {\n            response.data.current_weather = res.data.current_weather;\n            response.data.current_temperature = res.data.current_temperature;\n            dispatch(getUserSuccess(response.data));\n          });\n        });\n      });\n    }).catch(function (err) {\n      dispatch(getUserFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/src/store/actions/user.js"],"names":["axios","actionTypes","USR_ADDR_URL","USR_REVIEW_URL","COMPOSITION_URL","MAX_REVIEW_DISPLAY","userRegisterStart","type","USER_REGISTER_START","userRegisterSuccess","response","USER_REGISTER_SUCCESS","userRegisterFail","error","USER_REGISTER_FAIL","register","userData","dispatch","url","post","then","catch","err","getUserSuccess","user","GET_USER_SUCCESS","getUserFail","GET_USER_FAIL","getUser","userId","token","localStorage","getItem","get","headers","res","data","reviews","sort","a","b","freq","i","Math","min","length","push","review","join","addressID","postalCode","current_weather","current_temperature"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\nimport {USR_ADDR_URL, USR_REVIEW_URL, COMPOSITION_URL} from \"../../constants\";\n\n\nconst MAX_REVIEW_DISPLAY = 5\n\nexport const userRegisterStart = () => {\n    return {\n        type: actionTypes.USER_REGISTER_START\n    };\n};\n\nexport const userRegisterSuccess = (response) => {\n    return {\n        type: actionTypes.USER_REGISTER_SUCCESS,\n        response\n    };\n};\n\nexport const userRegisterFail = (error) => {\n    return {\n        type: actionTypes.USER_REGISTER_FAIL,\n        error: error\n    };\n};\n\nexport const register = (userData) => {\n    return dispatch => {\n        dispatch(userRegisterStart());\n        // const url = `${USR_ADDR_URL}/users`;\n        const url = `${COMPOSITION_URL}/create`\n        axios.post(url, userData)\n            .then(response => {\n                dispatch(userRegisterSuccess());\n            })\n            .catch(err => {\n                dispatch(userRegisterFail(err));\n            });\n    };\n};\n\nexport const getUserSuccess = (user) => {\n    return {\n        type: actionTypes.GET_USER_SUCCESS,\n        user: user\n    };\n};\n\nexport const getUserFail = (error) => {\n    return {\n        type: actionTypes.GET_USER_FAIL,\n        error: error\n    };\n};\n\nexport const getUser = (userId) => {\n    return dispatch => {\n        let url = `${USR_ADDR_URL}/users/` + userId;\n        let token = localStorage.getItem('token');\n        axios.get(url, { headers: {\"Authorization\" : `Bearer ${token}`}})\n        .then(response => {\n            axios.get(`${USR_REVIEW_URL}/users/${userId}/reviews`)\n            .then(res => {\n                res = res.data\n                const reviews = []\n                res.sort((a,b)=> (b.freq - a.freq))\n                for (let i=0;i<Math.min(res.length,MAX_REVIEW_DISPLAY);i++){\n                    reviews.push(res[i].review)\n                }\n                response.data.reviews = reviews.join(\",\")\n                axios.get(`${USR_ADDR_URL}/address/${response.data.addressID}`)\n                .then(res => {\n                    response.data.postalCode = res.data.postalCode\n                    axios.get(`${USR_ADDR_URL}/users/${userId}/weather`)\n                    .then(res => {\n\n                        response.data.current_weather = res.data.current_weather\n                        response.data.current_temperature = res.data.current_temperature\n                        dispatch(getUserSuccess(response.data));   \n                    })\n                                     \n                })\n            })\n        })\n        .catch(err => {\n            dispatch(getUserFail(err));\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}