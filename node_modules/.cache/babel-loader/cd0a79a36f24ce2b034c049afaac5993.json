{"ast":null,"code":"import _defineProperty from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/src/containers/User/UserRegister/UserRegister.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/lib/Button';\nimport ButtonToolbar from 'react-bootstrap/lib/ButtonToolbar';\nimport Col from 'react-bootstrap/lib/Col';\nimport ControlLabel from 'react-bootstrap/lib/ControlLabel';\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\nimport Grid from 'react-bootstrap/lib/Grid';\nimport Radio from 'react-bootstrap/lib/Radio';\nimport Row from 'react-bootstrap/lib/Row';\nimport { connect } from 'react-redux';\nimport Input from '../../../components/UI/Input/Input';\nimport { checkValidity, updateObject } from '../../../shared/utility';\nimport * as actions from '../../../store/actions/index';\nimport './UserRegister.css';\n\nvar UserRegister = /*#__PURE__*/function (_Component) {\n  _inherits(UserRegister, _Component);\n\n  var _super = _createSuper(UserRegister);\n\n  function UserRegister() {\n    var _this;\n\n    _classCallCheck(this, UserRegister);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      userData: {\n        nameFirst: {\n          elementConfig: {\n            type: 'text',\n            placeholder: 'First name'\n          },\n          value: null,\n          validation: {\n            required: true\n          },\n          valid: false\n        },\n        nameLast: {\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Last name'\n          },\n          value: null,\n          validation: {\n            required: true\n          },\n          valid: false\n        },\n        email: {\n          elementConfig: {\n            type: 'text',\n            placeholder: 'University Email (Required)'\n          },\n          value: null,\n          validation: {\n            required: true\n          },\n          valid: false\n        },\n        address: {\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Street Address'\n          },\n          value: null,\n          validation: {\n            required: false\n          },\n          valid: false\n        },\n        postcode: {\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Postal Code (Required)'\n          },\n          value: null,\n          validation: {\n            required: true\n          },\n          valid: false\n        },\n        password: {\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password (Required)'\n          },\n          value: null,\n          validation: {\n            required: true\n          },\n          valid: false\n        },\n        confirmPassword: {\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Confirm Password (Required)'\n          },\n          value: null,\n          validation: {\n            required: true\n          },\n          valid: false\n        },\n        movie: {\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Favorite Movies'\n          },\n          value: null,\n          validation: {\n            required: false\n          },\n          valid: false\n        },\n        book: {\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Favorite Books'\n          },\n          value: null,\n          validation: {\n            required: false\n          },\n          valid: false\n        },\n        music: {\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Favorite Music'\n          },\n          value: null,\n          validation: {\n            required: false\n          },\n          valid: false\n        },\n        sport: {\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Favorite Sports'\n          },\n          value: null,\n          validation: {\n            required: false\n          },\n          valid: false\n        },\n        hobby: {\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Other Hobbies'\n          },\n          value: null,\n          validation: {\n            required: false\n          },\n          valid: false\n        },\n        major: {\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your University/College Major'\n          },\n          value: null,\n          validation: {\n            required: false\n          },\n          valid: false\n        }\n      },\n      gender: null,\n      orientation: null\n    };\n\n    _this.inputChangedHandler = function (event, controlName) {\n      var updatedControls = updateObject(_this.state.userData, _defineProperty({}, controlName, updateObject(_this.state.userData[controlName], {\n        value: event.target.value,\n        valid: checkValidity(event.target.value, _this.state.userData[controlName].validation)\n      })));\n\n      _this.setState({\n        userData: updatedControls\n      });\n    };\n\n    _this.handleGenderChange = function (gender) {\n      _this.setState({\n        gender: gender.target.value\n      });\n    };\n\n    _this.handleOrientChange = function (orient) {\n      _this.setState({\n        orientation: orient.target.value\n      });\n    };\n\n    _this.submitHandler = function (event) {\n      event.preventDefault();\n      var formData = {};\n\n      for (var formElementIdentifier in _this.state.userData) {\n        if (formElementIdentifier === 'confirmPassword') continue;\n\n        if (_this.state.userData[formElementIdentifier].value) {\n          formData[formElementIdentifier] = _this.state.userData[formElementIdentifier].value;\n        }\n      }\n\n      if (_this.state.gender) {\n        formData['Gender'] = _this.state.gender.toLowerCase();\n      }\n\n      if (_this.state.orientation) {\n        formData['orientation'] = _this.state.orientation.toLowerCase();\n      }\n\n      _this.props.onRegister(formData).then(function () {\n        // back to non-registration mode after registration step\n        window.alert('User registered! Please log in to continue!');\n\n        _this.props.canceled();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UserRegister, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.userData) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.userData[key]\n        });\n      }\n\n      var formFields = formElementsArray.map(function (formElement) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ControlLabel, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }\n        }, formElement.config.elementConfig.placeholder), /*#__PURE__*/React.createElement(Input, {\n          key: formElement.id,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }\n        }));\n      });\n      return /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 12,\n        md: 10,\n        lg: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }\n      }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(ControlLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 33\n        }\n      }, \"My Gender\"), /*#__PURE__*/React.createElement(Radio, {\n        name: \"radioGroup\",\n        inline: true,\n        value: \"Male\",\n        checked: this.state.gender === \"Male\",\n        onChange: this.handleGenderChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 33\n        }\n      }, \"Male\"), /*#__PURE__*/React.createElement(Radio, {\n        name: \"radioGroup\",\n        inline: true,\n        value: \"Female\",\n        checked: this.state.gender === \"Female\",\n        onChange: this.handleGenderChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 33\n        }\n      }, \"Female\"), /*#__PURE__*/React.createElement(Radio, {\n        name: \"radioGroup\",\n        inline: true,\n        value: \"Other\",\n        checked: this.state.gender === \"Other\",\n        onChange: this.handleGenderChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 33\n        }\n      }, \"Other\"), /*#__PURE__*/React.createElement(Radio, {\n        name: \"radioGroup\",\n        inline: true,\n        value: \"Secret\",\n        checked: this.state.gender === \"Secret\",\n        onChange: this.handleGenderChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 33\n        }\n      }, \"Secret\")), formFields, /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(ControlLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 33\n        }\n      }, \"My Gender Orientation\"), /*#__PURE__*/React.createElement(Radio, {\n        name: \"radioGroup\",\n        inline: true,\n        value: \"Heterosexual\",\n        checked: this.state.orientation === \"Heterosexual\",\n        onChange: this.handleOrientChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 33\n        }\n      }, \"Heterosexual\"), /*#__PURE__*/React.createElement(Radio, {\n        name: \"radioGroup\",\n        inline: true,\n        value: \"Bisexual\",\n        checked: this.state.orientation === \"Bisexual\",\n        onChange: this.handleOrientChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 33\n        }\n      }, \"Bisexual\"), /*#__PURE__*/React.createElement(Radio, {\n        name: \"radioGroup\",\n        inline: true,\n        value: \"Homosexual\",\n        checked: this.state.orientation === \"Homosexual\",\n        onChange: this.handleOrientChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 33\n        }\n      }, \"Homosexual\"), /*#__PURE__*/React.createElement(Radio, {\n        name: \"radioGroup\",\n        inline: true,\n        value: \"Asexual\",\n        checked: this.state.orientation === \"Asexual\",\n        onChange: this.handleOrientChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 33\n        }\n      }, \"Asexual\"), /*#__PURE__*/React.createElement(Radio, {\n        name: \"radioGroup\",\n        inline: true,\n        value: \"Secret\",\n        checked: this.state.orientation === \"Secret\",\n        onChange: this.handleOrientChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 33\n        }\n      }, \"Secret\")), /*#__PURE__*/React.createElement(ButtonToolbar, {\n        className: \"float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        bsStyle: \"success\",\n        onClick: this.submitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 33\n        }\n      }, \"Register\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.props.canceled,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 33\n        }\n      }, \"Cancel\"))))));\n    }\n  }]);\n\n  return UserRegister;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onRegister: function onRegister(user) {\n      return new Promise(function (resolve, reject) {\n        dispatch(actions.register(user));\n        resolve();\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(UserRegister);","map":{"version":3,"sources":["/Users/MikeYu/Columbia MSCS/6156 Cloud Computing/LionMatch/src/containers/User/UserRegister/UserRegister.js"],"names":["React","Component","Button","ButtonToolbar","Col","ControlLabel","FormGroup","Grid","Radio","Row","connect","Input","checkValidity","updateObject","actions","UserRegister","state","userData","nameFirst","elementConfig","type","placeholder","value","validation","required","valid","nameLast","email","address","postcode","password","confirmPassword","movie","book","music","sport","hobby","major","gender","orientation","inputChangedHandler","event","controlName","updatedControls","target","setState","handleGenderChange","handleOrientChange","orient","submitHandler","preventDefault","formData","formElementIdentifier","toLowerCase","props","onRegister","then","window","alert","canceled","formElementsArray","key","push","id","config","formFields","map","formElement","mapDispatchToProps","dispatch","user","Promise","resolve","reject","register"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Button from 'react-bootstrap/lib/Button';\nimport ButtonToolbar from 'react-bootstrap/lib/ButtonToolbar';\nimport Col from 'react-bootstrap/lib/Col';\nimport ControlLabel from 'react-bootstrap/lib/ControlLabel';\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\nimport Grid from 'react-bootstrap/lib/Grid';\nimport Radio from 'react-bootstrap/lib/Radio';\nimport Row from 'react-bootstrap/lib/Row';\nimport { connect } from 'react-redux';\nimport Input from '../../../components/UI/Input/Input';\nimport { checkValidity, updateObject } from '../../../shared/utility';\nimport * as actions from '../../../store/actions/index';\nimport './UserRegister.css';\n\n\nclass UserRegister extends Component {\n\n    state = {\n        userData: {\n            nameFirst: {\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'First name'\n                },\n                value: null,\n                validation: {\n                    required: true\n                },\n                valid: false\n            },\n            nameLast: {\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Last name'\n                },\n                value: null,\n                validation: {\n                    required: true\n                },\n                valid: false\n            },\n            email: {\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'University Email (Required)'\n                },\n                value: null,\n                validation: {\n                    required: true\n                },\n                valid: false\n            },\n            address: {\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street Address'\n                },\n                value: null,\n                validation: {\n                    required: false\n                },\n                valid: false\n            },\n            postcode: {\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Postal Code (Required)'\n                },\n                value: null,\n                validation: {\n                    required: true\n                },\n                valid: false\n            },\n            password: {\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password (Required)'\n                },\n                value: null,\n                validation: {\n                    required: true\n                },\n                valid: false\n            },\n            confirmPassword: {\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Confirm Password (Required)'\n                },\n                value: null,\n                validation: {\n                    required: true\n                },\n                valid: false\n            },\n            movie: {\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Favorite Movies'\n                },\n                value: null,\n                validation: {\n                    required: false\n                },\n                valid: false\n            },\n            book: {\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Favorite Books'\n                },\n                value: null,\n                validation: {\n                    required: false\n                },\n                valid: false\n            },\n            music: {\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Favorite Music'\n                },\n                value: null,\n                validation: {\n                    required: false\n                },\n                valid: false\n            },\n            sport: {\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Favorite Sports'\n                },\n                value: null,\n                validation: {\n                    required: false\n                },\n                valid: false\n            },\n            hobby: {\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Other Hobbies'\n                },\n                value: null,\n                validation: {\n                    required: false\n                },\n                valid: false\n            },\n            major: {\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your University/College Major'\n                },\n                value: null,\n                validation: {\n                    required: false\n                },\n                valid: false\n            },\n\n        },\n        gender: null,\n        orientation: null,\n    }\n\n    inputChangedHandler = ( event, controlName ) => {\n        const updatedControls = updateObject(this.state.userData, {\n            [controlName]: updateObject(this.state.userData[controlName], {\n                value: event.target.value,\n                valid: checkValidity(event.target.value, this.state.userData[controlName].validation )\n            })\n        });\n        this.setState( { userData: updatedControls } );\n    }\n\n    handleGenderChange = gender => {\n        this.setState({\n          gender: gender.target.value\n        });\n    };\n\n    handleOrientChange = orient => {\n        this.setState({\n            orientation: orient.target.value\n        });\n    };\n\n    submitHandler = ( event ) => {\n        event.preventDefault();\n\n        const formData = {};\n        for (let formElementIdentifier in this.state.userData) {\n            if (formElementIdentifier === 'confirmPassword')  continue;\n            if (this.state.userData[formElementIdentifier].value) {\n                formData[formElementIdentifier] = this.state.userData[formElementIdentifier].value;\n            }\n        }\n\n        if (this.state.gender) {\n            formData['Gender'] = this.state.gender.toLowerCase();\n        }\n        if (this.state.orientation) {\n            formData['orientation'] = this.state.orientation.toLowerCase();\n        }\n\n        this.props.onRegister( formData )\n            .then(() => {\n                // back to non-registration mode after registration step\n                window.alert('User registered! Please log in to continue!');\n                this.props.canceled();\n            });\n    }\n\n    render() {\n\n        const formElementsArray = [];\n        for ( let key in this.state.userData ) {\n            formElementsArray.push( {\n                id: key,\n                config: this.state.userData[key]\n            } );\n        }\n\n        let formFields = formElementsArray.map( formElement => (\n            <>\n                <ControlLabel>{formElement.config.elementConfig.placeholder}</ControlLabel>\n                <Input\n                    key={formElement.id}\n                    elementConfig={formElement.config.elementConfig}\n                    value={formElement.config.value}\n                    changed={( event ) => this.inputChangedHandler( event, formElement.id )} />\n            </>\n\n        ) );\n\n        return (\n            <Grid>\n                <Row>\n                    <Col xs={12} md={10} lg={6}>\n                        <h2>Sign Up</h2>\n                        <hr/>\n                        <form>\n                            <FormGroup>\n                                <ControlLabel>My Gender</ControlLabel>\n                                <Radio name=\"radioGroup\" inline value=\"Male\" checked={this.state.gender === \"Male\"} onChange={this.handleGenderChange}>Male</Radio>\n                                <Radio name=\"radioGroup\" inline value=\"Female\" checked={this.state.gender === \"Female\"} onChange={this.handleGenderChange}>Female</Radio>\n                                <Radio name=\"radioGroup\" inline value=\"Other\" checked={this.state.gender === \"Other\"} onChange={this.handleGenderChange}>Other</Radio>\n                                <Radio name=\"radioGroup\" inline value=\"Secret\" checked={this.state.gender === \"Secret\"} onChange={this.handleGenderChange}>Secret</Radio>\n                            </FormGroup>\n                            {formFields}\n                            <FormGroup>\n                                <ControlLabel>My Gender Orientation</ControlLabel>\n                                <Radio name=\"radioGroup\" inline value=\"Heterosexual\" checked={this.state.orientation === \"Heterosexual\"} onChange={this.handleOrientChange}>Heterosexual</Radio>\n                                <Radio name=\"radioGroup\" inline value=\"Bisexual\" checked={this.state.orientation === \"Bisexual\"} onChange={this.handleOrientChange}>Bisexual</Radio>\n                                <Radio name=\"radioGroup\" inline value=\"Homosexual\" checked={this.state.orientation === \"Homosexual\"} onChange={this.handleOrientChange}>Homosexual</Radio>\n                                <Radio name=\"radioGroup\" inline value=\"Asexual\" checked={this.state.orientation === \"Asexual\"} onChange={this.handleOrientChange}>Asexual</Radio>\n                                <Radio name=\"radioGroup\" inline value=\"Secret\" checked={this.state.orientation === \"Secret\"} onChange={this.handleOrientChange}>Secret</Radio>\n                            </FormGroup>\n                            <ButtonToolbar className=\"float-right\">\n                                <Button bsStyle=\"success\" onClick={this.submitHandler}>Register</Button>\n                                <Button onClick={this.props.canceled}>Cancel</Button>\n                            </ButtonToolbar>\n                        </form>\n                    </Col>\n                </Row>\n            </Grid>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onRegister: ( user ) => {\n            return new Promise((resolve, reject) => {\n                dispatch(actions.register(user));\n                resolve();\n            });\n        }\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(UserRegister);"]},"metadata":{},"sourceType":"module"}